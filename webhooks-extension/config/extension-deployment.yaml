# ------------------- Extension Service Account ----------------------- #
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: tekton-webhooks-extension
  name: tekton-webhooks-extension
  namespace: tekton-pipelines
---
# ------------------- ClusterRole/Binding and Role/Binding for webhooks-extension and monitor-task ------------------- #
# webhooks-extension must be able to list pipelines and service accounts in remote namespaces
# monitor needs to list pipelineruns
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: tekton-webhooks-extension-minimal-cluster-powers
rules:
- apiGroups:
  - ""
  resources:
  - serviceaccounts
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - tekton.dev
  resources:
  - pipelines
  - pipelineruns
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: tekton-webhooks-extension-minimal-cluster-powers
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: tekton-webhooks-extension-minimal-cluster-powers
subjects:
- kind: ServiceAccount
  name: tekton-webhooks-extension
  namespace: tekton-pipelines
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: tekton-webhooks-extension-minimal
  namespace: tekton-pipelines
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - services
  verbs:
  - get
  - list
  - create
  - update
  - delete
  - patch
  - watch
- apiGroups:
  - ""
  resources:
  - pods/log
  - namespaces
  - events
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  - configmaps
  verbs:
  - get
  - list
  - create
  - delete
  - update
  - watch
- apiGroups:
  - extensions
  - apps
  resources:
  - deployments
  verbs:
  - get
  - list
  - create
  - update
  - delete
  - patch
  - watch
- apiGroups:
  - tekton.dev
  resources:
  - tasks
  - clustertasks
  - taskruns
  - pipelines
  - pipelineruns
  - pipelineresources
  - eventlisteners
  - triggerbindings
  - triggertemplates
  - conditions
  verbs:
  - get
  - list
  - create
  - update
  - delete
  - patch
  - watch
- apiGroups:
  - tekton.dev
  resources:
  - taskruns/finalizers
  - pipelineruns/finalizers
  verbs:
  - get
  - list
  - create
  - update
  - delete
  - patch
  - watch
- apiGroups:
  - tekton.dev
  resources:
  - tasks/status
  - clustertasks/status
  - taskruns/status
  - pipelines/status
  - pipelineruns/status
  verbs:
  - get
  - list
  - create
  - update
  - delete
  - patch
  - watch
- apiGroups:
  - extensions
  resources:
  - ingresses
  - ingresses/status
  verbs:
  - delete
  - create
  - patch
  - get
  - list
  - update
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  namespace: tekton-pipelines
  name: tekton-webhooks-extension-minimal
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: tekton-webhooks-extension-minimal
subjects:
- kind: ServiceAccount
  name: tekton-webhooks-extension
---
# ------------------- Event Listener ServiceAccount, ClusterRole and Binding ----------------------- #
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: tekton-webhooks-extension
  name: tekton-webhooks-extension-eventlistener
  namespace: tekton-pipelines
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: tekton-triggers-minimal
rules:
- apiGroups:
  - tekton.dev
  resources:
  - tasks
  - taskruns
  - eventlisteners
  - triggerbindings
  - triggertemplates
  verbs:
  - get
- apiGroups:
  - tekton.dev
  resources:
  - pipelineruns
  - pipelineresources
  - taskruns
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: tekton-webhooks-extension-eventlistener-minimal
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: tekton-triggers-minimal
subjects:
- kind: ServiceAccount
  name: tekton-webhooks-extension-eventlistener
  namespace: tekton-pipelines
---
# ------------------- Webhooks Extension Deployment ----------------------- #
apiVersion: apps/v1
kind: Deployment
metadata:
  name: webhooks-extension
  namespace: tekton-pipelines
  labels:
    app: webhooks-extension
spec:
  replicas: 1
  selector:
    matchLabels:
      app: webhooks-extension
  template:
    metadata:
      labels:
        app: webhooks-extension
    spec:
      serviceAccountName: tekton-webhooks-extension
      containers:
        - name: webhooks-extension
          image: "github.com/tektoncd/experimental/webhooks-extension/cmd/extension"
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          livenessProbe:
            httpGet:
              path: /liveness
              port: 8080
          readinessProbe:
            httpGet:
              path: /readiness
              port: 8080
          env:
          - name: PORT
            value: "8080"
          - name: INSTALLED_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: DOCKER_REGISTRY_LOCATION
            value: DOCKER_REPO
          - name: WEB_RESOURCES_DIR
            value: web
          - name: WEBHOOK_CALLBACK_URL
            value: "http://listener.IPADDRESS.nip.io"
          # If the WEBHOOK_CALLBACK_URL's protocol is https, should ssl verification be enabled/disabled
          - name: SSL_VERIFICATION_ENABLED
            value: "false"
          - name: SERVICE_ACCOUNT
            valueFrom:
              fieldRef:
                fieldPath: spec.serviceAccountName
