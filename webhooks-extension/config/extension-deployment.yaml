# ----------------------------------- Extension Role and Role Binding ---------------------------------------- # 

kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: tekton-dashboard-webhooks-extension
  namespace: tekton-pipelines
rules:
  - apiGroups: ["sources.eventing.knative.dev"]
    resources: ["githubsources"]
    verbs: ["create", get", "list", "update", "delete"]

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: tekton-dashboard-webhooks-extension
subjects:
  - kind: ServiceAccount
    name: tekton-dashboard
    namespace: tekton-pipelines
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: tekton-dashboard-webhooks-extension

---

# ----------------------------------- Extension Deployment ------------------------------------------------------- # 

apiVersion: apps/v1
kind: Deployment
metadata:
  name: webhooks-extension
  labels:
    app: webhooks-extension
spec:
  replicas: 1
  selector:
    matchLabels:
      app: webhooks-extension
  template:
    metadata:
      labels:
        app: webhooks-extension
    spec:
      serviceAccountName: tekton-dashboard
      containers:
        - name: webhooks-extension
          image: "github.com/tektoncd/experimental/webhooks-extension/cmd/extension"
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          livenessProbe:
            httpGet:
              path: /liveness
              port: 8080
          readinessProbe:
            httpGet:
              path: /readiness
              port: 8080
          env:
          - name: PORT
            value: "8080"
          - name: INSTALLED_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: DOCKER_REGISTRY_LOCATION
            value: DOCKER_REPO
          - name: WEB_RESOURCES_DIR
            value: web